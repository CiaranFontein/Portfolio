{"version":3,"sources":["serviceWorker.js","components/Header/index.js","components/Body/index.js","components/Footer/index.js","App.js","index.js","assets/textBackground.gif"],"names":["Boolean","window","location","hostname","match","Container","styled","div","FancyText","textBackground","FancyTextContainer","Header","leftCenter","React","createRef","rightCenter","StyledBody","EyesContainer","Eye","EyeColor","position","x","y","Pupil","CenterPoint","Body","mouse","leftPos","current","getBoundingClientRect","left","width","top","height","rightPos","leftDiff","rightDiff","leftAngle","Math","atan2","rightAngle","leftPupilPos","cos","sin","rightPupilPos","posFromTop","ref","StyledFooter","Footer","StyledAppContainer","StyledApp","App","useMouse","enterDelay","leaveDelay","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.a10805b2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport textBackground from \"../../assets/textBackground.gif\";\n\nconst Container = styled.div`\ndisplay:flex;\nflex-direction:column;\nheight:200px;\nwidth:100%;\n`;\n\nconst FancyText = styled.div`\nposition: absolute;\nbackground-image: url(${textBackground});\n\tbackground-size: cover;\n\tcolor: transparent;\n\t-moz-background-clip: text;\n\t-webkit-background-clip: text;\n\ttext-transform: uppercase;\n\tfont-size: 120px;\n  font-weight:bold;\n  object-fit:contain;\n  opacity: 0.5;\n`;\n\nconst FancyTextContainer = styled.div`\ntext-align: center;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nheight: 100vh;\nletter-spacing: 50px;\n`;\n\nconst Header = () => {\n  return (\n    <Container>\n      <FancyTextContainer>\n        <FancyText>Ciaran Fontein</FancyText>\n      </FancyTextContainer>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst magnitude = 40;\nconst leftCenter = React.createRef();\nconst rightCenter = React.createRef();\n\nconst StyledBody = styled.div`\n  width: 100%;\n  overflow-y: scroll;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  overflow-y:scroll;\n`;\n\nconst EyesContainer = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\nwidth: 86%;\n`;\n\nconst Eye = styled.div`\nborder-radius:50%;\nheight: 200px;\nwidth: 200px;\nbackground-color: #FFF;\nmargin: 0px 1rem;\nposition: relative;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\n`;\n\nconst EyeColor = styled.div`\nposition: relative;\nheight: 5rem;\n  width: 5rem;\n  border-radius: 50%;\n  background-color: blue;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  left: ${({ position }) => position?.x}px;\n  top: ${ ({ position }) => position?.y}px;\n`;\n\nconst Pupil = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 2.5rem;\nwidth: 2.5rem;\nborder-radius: 50%;\nbackground-color: #000;\n`;\n\nconst CenterPoint = styled.div`\nposition:absolute;\ntop:50%;\nleft:50%;\nheight: 0;\nwidth: 0;\n`;\n\nconst Body = ({ mouse }) => {\n  const leftPos = { x: leftCenter.current?.getBoundingClientRect().left + leftCenter.current?.getBoundingClientRect().width / 2, y: leftCenter.current?.getBoundingClientRect().top + leftCenter.current?.getBoundingClientRect().height / 2 };\n  const rightPos = { x: rightCenter.current?.getBoundingClientRect().left + rightCenter.current?.getBoundingClientRect().width / 2, y: rightCenter.current?.getBoundingClientRect().top + rightCenter.current?.getBoundingClientRect().height / 2 / 2 };\n  const leftDiff = { x: mouse.x - leftPos.x, y: mouse.y - leftPos.y };\n  const rightDiff = { x: mouse.x - rightPos.x, y: mouse.y - rightPos.y };\n  const leftAngle = Math.atan2(leftDiff.y, leftDiff.x);\n  const rightAngle = Math.atan2(rightDiff.y, rightDiff.x);\n  const leftPupilPos = { x: Math.cos(leftAngle) * magnitude, y: Math.sin(leftAngle) * magnitude }\n  const rightPupilPos = { x: Math.cos(rightAngle) * magnitude, y: Math.sin(rightAngle) * magnitude }\n\n  return (\n    <StyledBody posFromTop={0} >\n      <EyesContainer>\n        <Eye>\n          <CenterPoint ref={leftCenter} />\n          <EyeColor position={leftPupilPos}>\n            <Pupil>\n\n            </Pupil>\n          </EyeColor>\n        </Eye>\n        <Eye>\n          <CenterPoint ref={rightCenter} />\n          <EyeColor position={rightPupilPos}>\n            <Pupil></Pupil>\n          </EyeColor>\n        </Eye>\n      </EyesContainer>\n    </StyledBody>\n  );\n};\n\nexport default Body;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledFooter = styled.div`\nposition: fixed;\nheight:200px;\nwidth: 86%;\nbottom: 0;\nfont-size: 36px;\nflex: none;\n`;\n\nconst Footer = () => {\n  return <StyledFooter></StyledFooter>;\n};\n\nexport default Footer;\n","import * as React from \"react\";\n\nimport { Body, Footer, Header } from \"./components\";\n\nimport styled from \"styled-components\";\nimport useMouse from '@react-hook/mouse-position'\n\nconst StyledAppContainer = styled.div`\nheight: 100%;\nwidth: 100%;\ndisplay:flex;\njustify-content: center;\nalign-items: center;\n`;\n\nconst StyledApp = styled.div`\nmax-width: 86%;\nheight: 100%;\ndisplay:flex;\njustify-content: center;\nalign-items:center;\nflex-direction: column;\nflex: 1;\n`;\n\nfunction App() {\n\n  const ref = React.useRef(null)\n  const mouse = useMouse(ref, {\n    enterDelay: 100,\n    leaveDelay: 100,\n  })\n\n  return (\n    <StyledAppContainer ref={ref}>\n      <StyledApp>\n        <Header />\n        <Body mouse={mouse} />\n        <Footer />\n      </StyledApp>\n    </StyledAppContainer>\n  );\n}\n\nexport default App;\n","import \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/textBackground.6bcdac84.gif\";"],"sourceRoot":""}